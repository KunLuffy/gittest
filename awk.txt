1、概述
awk用于格式化报文或者从文本文件中抽取数据包

2、使用方法
（1）命令行：awk [-F separator] 'commands' input-file
commands部分可以提取出来作为脚本，awk脚本有如下两种使用方式
（2）批处理：首行使用#!/bin/awk -f说明的批处理文件。命令格式：xxx.awk input-file
（3）awk脚本：命令格式awk -f xxx.awk input-file
当未指定separator时，默认空格为分隔符

3、模式和动作
所有awk commands都有模式和动作两部分组成。
模式可以是任何条件语句、复合语句或者正则表达式。模式有两个特殊字段：BEGIN和END。BEGIN设置计数和打印头，END在结尾输出文本总数和结尾状态标志。
动作大多在{...}中指明，大多是打印，可以通过条件判断和循环输出。
（1）awk变量
$0,$1,$2,$3...$n：域标示。域是使用分隔符分开的单独区域，$1~$n分别标示第1个到第n个域。$0标示所有域。打印域的方法是print，print可以输出固定字符串或者域信息，如果参数之间使用逗号，则输出以空格间隔。awk执行模式BEGIN时，文件还未读入，这些域标示都是空的。
注：使用 > 重定向输出到一个文件，输出则不会显示到屏幕。如果既要输出到文件，也要输出到屏幕，使用管道将标准输出传递给tee命令。
（2）向awk脚本输入的方法
命令方式：xxx.awk input-file
重定向方式：xxx.awk < input-file
管道方式：input-file | xxx.awk
（3）元字符
\ ^ $ . [ ] | ( ) * + ?
（4）条件操作符
<, <=, ==, !=, >=, ~, !~
~和!~分别表示正则表达式匹配和正则表达式不匹配，使用方式是：文本~正则表达式，文本!~正则表达式
正则匹配和==判断的一个常用场景是：正则匹配用于模糊匹配，==判断用于精确匹配
判断条件判断的语句是if，如if($3~/Dec/) print $4，第3域是否包含Dec字符串，如果包含，输出第4域
